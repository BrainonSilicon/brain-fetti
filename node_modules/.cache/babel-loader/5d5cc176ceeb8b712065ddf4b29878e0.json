{"ast":null,"code":"import _slicedToArray from \"/Users/sophiabatchelor/Code/Neurosity/brain-fetti/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sophiabatchelor/Code/Neurosity/brain-fetti/src/pages/Login.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { LoginForm } from \"../components/LoginForm\";\nimport { Footer } from \"../components/Footer\";\nexport function Login({\n  notion,\n  user,\n  setUser,\n  setDeviceId\n}) {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isLoggingIn = _useState8[0],\n        setIsLoggingIn = _useState8[1];\n\n  useEffect(() => {\n    if (!user && notion && email && password) {\n      login();\n    }\n\n    async function login() {\n      setIsLoggingIn(true);\n      const auth = await notion.login({\n        email,\n        password\n      }).catch(error => {\n        setError(error.message);\n      });\n\n      if (auth) {\n        setUser(auth.user);\n        resetForm();\n      }\n\n      setIsLoggingIn(false);\n    }\n  }, [email, password, notion, user, setUser, setError]);\n\n  function onLogin({\n    email,\n    password,\n    deviceId\n  }) {\n    if (deviceId && deviceId.length !== 32) {\n      setError(\"Please enter a valid device id\");\n      return;\n    }\n\n    if (email && password && deviceId) {\n      setError(\"\");\n      setEmail(email);\n      setPassword(password);\n      setDeviceId(deviceId);\n    } else {\n      setError(\"Please fill the form\");\n    }\n  }\n\n  function resetForm() {\n    setError(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  }\n\n  return React.createElement(\"main\", {\n    className: \"main-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(LoginForm, {\n    onLogin: onLogin,\n    error: error,\n    loading: isLoggingIn,\n    footerComponent: React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/sophiabatchelor/Code/Neurosity/brain-fetti/src/pages/Login.js"],"names":["React","useState","useEffect","LoginForm","Footer","Login","notion","user","setUser","setDeviceId","email","setEmail","password","setPassword","error","setError","isLoggingIn","setIsLoggingIn","login","auth","catch","message","resetForm","onLogin","deviceId","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,MAAT,QAAuB,sBAAvB;AAEA,OAAO,SAASC,KAAT,CAAe;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,IAAV;AAAgBC,EAAAA,OAAhB;AAAyBC,EAAAA;AAAzB,CAAf,EAAuD;AAAA,oBAClCR,QAAQ,CAAC,EAAD,CAD0B;AAAA;AAAA,QACrDS,KADqD;AAAA,QAC9CC,QAD8C;;AAAA,qBAE5BV,QAAQ,CAAC,EAAD,CAFoB;AAAA;AAAA,QAErDW,QAFqD;AAAA,QAE3CC,WAF2C;;AAAA,qBAGlCZ,QAAQ,CAAC,EAAD,CAH0B;AAAA;AAAA,QAGrDa,KAHqD;AAAA,QAG9CC,QAH8C;;AAAA,qBAItBd,QAAQ,CAAC,KAAD,CAJc;AAAA;AAAA,QAIrDe,WAJqD;AAAA,QAIxCC,cAJwC;;AAM5Df,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACK,IAAD,IAASD,MAAT,IAAmBI,KAAnB,IAA4BE,QAAhC,EAA0C;AACxCM,MAAAA,KAAK;AACN;;AAED,mBAAeA,KAAf,GAAuB;AACrBD,MAAAA,cAAc,CAAC,IAAD,CAAd;AACA,YAAME,IAAI,GAAG,MAAMb,MAAM,CACtBY,KADgB,CACV;AAAER,QAAAA,KAAF;AAASE,QAAAA;AAAT,OADU,EAEhBQ,KAFgB,CAEVN,KAAK,IAAI;AACdC,QAAAA,QAAQ,CAACD,KAAK,CAACO,OAAP,CAAR;AACD,OAJgB,CAAnB;;AAMA,UAAIF,IAAJ,EAAU;AACRX,QAAAA,OAAO,CAACW,IAAI,CAACZ,IAAN,CAAP;AACAe,QAAAA,SAAS;AACV;;AACDL,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,GAnBQ,EAmBN,CAACP,KAAD,EAAQE,QAAR,EAAkBN,MAAlB,EAA0BC,IAA1B,EAAgCC,OAAhC,EAAyCO,QAAzC,CAnBM,CAAT;;AAqBA,WAASQ,OAAT,CAAiB;AAAEb,IAAAA,KAAF;AAASE,IAAAA,QAAT;AAAmBY,IAAAA;AAAnB,GAAjB,EAAgD;AAC9C,QAAIA,QAAQ,IAAIA,QAAQ,CAACC,MAAT,KAAoB,EAApC,EAAwC;AACtCV,MAAAA,QAAQ,CAAC,gCAAD,CAAR;AACA;AACD;;AAED,QAAIL,KAAK,IAAIE,QAAT,IAAqBY,QAAzB,EAAmC;AACjCT,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAJ,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,MAAAA,WAAW,CAACD,QAAD,CAAX;AACAH,MAAAA,WAAW,CAACe,QAAD,CAAX;AACD,KALD,MAKO;AACLT,MAAAA,QAAQ,CAAC,sBAAD,CAAR;AACD;AACF;;AAED,WAASO,SAAT,GAAqB;AACnBP,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAJ,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD;;AAED,SACE;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAEU,OADX;AAEE,IAAA,KAAK,EAAET,KAFT;AAGE,IAAA,OAAO,EAAEE,WAHX;AAIE,IAAA,eAAe,EAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { LoginForm } from \"../components/LoginForm\";\nimport { Footer } from \"../components/Footer\";\n\nexport function Login({ notion, user, setUser, setDeviceId }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoggingIn, setIsLoggingIn] = useState(false);\n\n  useEffect(() => {\n    if (!user && notion && email && password) {\n      login();\n    }\n\n    async function login() {\n      setIsLoggingIn(true);\n      const auth = await notion\n        .login({ email, password })\n        .catch(error => {\n          setError(error.message);\n        });\n\n      if (auth) {\n        setUser(auth.user);\n        resetForm();\n      }\n      setIsLoggingIn(false);\n    }\n  }, [email, password, notion, user, setUser, setError]);\n\n  function onLogin({ email, password, deviceId }) {\n    if (deviceId && deviceId.length !== 32) {\n      setError(\"Please enter a valid device id\");\n      return;\n    }\n\n    if (email && password && deviceId) {\n      setError(\"\");\n      setEmail(email);\n      setPassword(password);\n      setDeviceId(deviceId);\n    } else {\n      setError(\"Please fill the form\");\n    }\n  }\n\n  function resetForm() {\n    setError(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  }\n\n  return (\n    <main className=\"main-container\">\n      <LoginForm\n        onLogin={onLogin}\n        error={error}\n        loading={isLoggingIn}\n        footerComponent={<Footer />}\n      />\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}