{"ast":null,"code":"import _slicedToArray from \"/Users/sophiabatchelor/Code/Neurosity/brain-fetti/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sophiabatchelor/Code/Neurosity/brain-fetti/src/components/Status.js\";\nimport React, { useState, useEffect } from \"react\";\nconst statesLabels = {\n  booting: \"Starting OS...\",\n  shuttingOff: \"Shutting off...\",\n  updating: \"Updating OS...\",\n  online: \"Online\",\n  offline: \"Offline\"\n};\nconst stateColors = {\n  booting: \"darkslategrey\",\n  shuttingOff: \"darkslategrey\",\n  updating: \"orange\",\n  online: \"limegreen\",\n  offline: \"crimson\"\n};\nexport function Status({\n  notion,\n  info\n}) {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        status = _useState2[0],\n        setStatus = _useState2[1];\n\n  const _ref = status || {},\n        state = _ref.state,\n        charging = _ref.charging,\n        battery = _ref.battery,\n        sleepMode = _ref.sleepMode;\n\n  useEffect(() => {\n    if (!notion) {\n      return;\n    }\n\n    const subscription = notion.status().subscribe(status => {\n      setStatus(status);\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [notion]);\n\n  if (!status) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Connecting to device...\");\n  }\n\n  return React.createElement(\"aside\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, info ? React.createElement(\"h3\", {\n    className: \"card-heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, info.deviceNickname) : null, React.createElement(\"div\", {\n    className: \"status-item status-state\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"status-indicator\",\n    style: {\n      background: getStatusColor(state)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), state in statesLabels ? statesLabels[state] : state), state !== \"offline\" ? React.createElement(\"div\", {\n    className: \"status-item status-battery\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(ChargingIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), \" \\xA0\", charging ? \"Charging\" : \"Charged\", \"\\xA0\", battery, \"%\") : null, sleepMode && state !== \"offline\" ? React.createElement(\"div\", {\n    className: \"status-item status-sleep-mode\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(SleepModeIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), \" \\xA0Sleep mode\") : null);\n}\n\nfunction getStatusColor(state) {\n  if (state in stateColors) {\n    return stateColors[state];\n  }\n\n  return stateColors.offline;\n}\n\nfunction ChargingIcon() {\n  return React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"Electricity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"\\u26A1\");\n}\n\nfunction SleepModeIcon() {\n  return React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"The Moon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"\\uD83C\\uDF19\");\n}","map":{"version":3,"sources":["/Users/sophiabatchelor/Code/Neurosity/brain-fetti/src/components/Status.js"],"names":["React","useState","useEffect","statesLabels","booting","shuttingOff","updating","online","offline","stateColors","Status","notion","info","status","setStatus","state","charging","battery","sleepMode","subscription","subscribe","unsubscribe","deviceNickname","background","getStatusColor","ChargingIcon","SleepModeIcon"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,gBADU;AAEnBC,EAAAA,WAAW,EAAE,iBAFM;AAGnBC,EAAAA,QAAQ,EAAE,gBAHS;AAInBC,EAAAA,MAAM,EAAE,QAJW;AAKnBC,EAAAA,OAAO,EAAE;AALU,CAArB;AAQA,MAAMC,WAAW,GAAG;AAClBL,EAAAA,OAAO,EAAE,eADS;AAElBC,EAAAA,WAAW,EAAE,eAFK;AAGlBC,EAAAA,QAAQ,EAAE,QAHQ;AAIlBC,EAAAA,MAAM,EAAE,WAJU;AAKlBC,EAAAA,OAAO,EAAE;AALS,CAApB;AAQA,OAAO,SAASE,MAAT,CAAgB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAhB,EAAkC;AAAA,oBACXX,QAAQ,CAAC,IAAD,CADG;AAAA;AAAA,QAChCY,MADgC;AAAA,QACxBC,SADwB;;AAAA,eAESD,MAAM,IAAI,EAFnB;AAAA,QAE/BE,KAF+B,QAE/BA,KAF+B;AAAA,QAExBC,QAFwB,QAExBA,QAFwB;AAAA,QAEdC,OAFc,QAEdA,OAFc;AAAA,QAELC,SAFK,QAELA,SAFK;;AAIvChB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACS,MAAL,EAAa;AACX;AACD;;AAED,UAAMQ,YAAY,GAAGR,MAAM,CAACE,MAAP,GAAgBO,SAAhB,CAA0BP,MAAM,IAAI;AACvDC,MAAAA,SAAS,CAACD,MAAD,CAAT;AACD,KAFoB,CAArB;AAIA,WAAO,MAAM;AACXM,MAAAA,YAAY,CAACE,WAAb;AACD,KAFD;AAGD,GAZQ,EAYN,CAACV,MAAD,CAZM,CAAT;;AAcA,MAAI,CAACE,MAAL,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,GACH;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,IAAI,CAACU,cAAnC,CADG,GAED,IAHN,EAIE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAEC,cAAc,CAACT,KAAD;AAA5B,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKGA,KAAK,IAAIZ,YAAT,GAAwBA,YAAY,CAACY,KAAD,CAApC,GAA8CA,KALjD,CAJF,EAWGA,KAAK,KAAK,SAAV,GACC;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,WAC0BC,QAAQ,GAAG,UAAH,GAAgB,SADlD,UAESC,OAFT,MADD,GAKG,IAhBN,EAiBGC,SAAS,IAAIH,KAAK,KAAK,SAAvB,GACC;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,oBADD,GAIG,IArBN,CADF;AAyBD;;AAED,SAASS,cAAT,CAAwBT,KAAxB,EAA+B;AAC7B,MAAIA,KAAK,IAAIN,WAAb,EAA0B;AACxB,WAAOA,WAAW,CAACM,KAAD,CAAlB;AACD;;AAED,SAAON,WAAW,CAACD,OAAnB;AACD;;AAED,SAASiB,YAAT,GAAwB;AACtB,SACE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;AAED,SAASC,aAAT,GAAyB;AACvB,SACE;AAAM,IAAA,IAAI,EAAC,KAAX;AAAiB,kBAAW,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst statesLabels = {\n  booting: \"Starting OS...\",\n  shuttingOff: \"Shutting off...\",\n  updating: \"Updating OS...\",\n  online: \"Online\",\n  offline: \"Offline\"\n};\n\nconst stateColors = {\n  booting: \"darkslategrey\",\n  shuttingOff: \"darkslategrey\",\n  updating: \"orange\",\n  online: \"limegreen\",\n  offline: \"crimson\"\n};\n\nexport function Status({ notion, info }) {\n  const [status, setStatus] = useState(null);\n  const { state, charging, battery, sleepMode } = status || {};\n\n  useEffect(() => {\n    if (!notion) {\n      return;\n    }\n\n    const subscription = notion.status().subscribe(status => {\n      setStatus(status);\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [notion]);\n\n  if (!status) {\n    return <div>Connecting to device...</div>;\n  }\n\n  return (\n    <aside>\n      {info ? (\n        <h3 className=\"card-heading\">{info.deviceNickname}</h3>\n      ) : null}\n      <div className=\"status-item status-state\">\n        <span\n          className=\"status-indicator\"\n          style={{ background: getStatusColor(state) }}\n        ></span>\n        {state in statesLabels ? statesLabels[state] : state}\n      </div>\n      {state !== \"offline\" ? (\n        <div className=\"status-item status-battery\">\n          <ChargingIcon /> &nbsp;{charging ? \"Charging\" : \"Charged\"}\n          &nbsp;{battery}%\n        </div>\n      ) : null}\n      {sleepMode && state !== \"offline\" ? (\n        <div className=\"status-item status-sleep-mode\">\n          <SleepModeIcon /> &nbsp;Sleep mode\n        </div>\n      ) : null}\n    </aside>\n  );\n}\n\nfunction getStatusColor(state) {\n  if (state in stateColors) {\n    return stateColors[state];\n  }\n\n  return stateColors.offline;\n}\n\nfunction ChargingIcon() {\n  return (\n    <span role=\"img\" aria-label=\"Electricity\">\n      &#x26A1;\n    </span>\n  );\n}\n\nfunction SleepModeIcon() {\n  return (\n    <span role=\"img\" aria-label=\"The Moon\">\n      &#127769;\n    </span>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}