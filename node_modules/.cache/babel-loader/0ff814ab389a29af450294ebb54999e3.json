{"ast":null,"code":"import _slicedToArray from \"/Users/sophiabatchelor/Code/Neurosity/brain-fetti/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sophiabatchelor/Code/Neurosity/brain-fetti/src/App.js\";\n//this is exactly the same as notion-ocean \n// the edits you want go into Calm etc \nimport React, { useState, useEffect } from \"react\";\nimport { Router, navigate } from \"@reach/router\";\nimport { Notion } from \"@neurosity/notion\";\nimport useLocalStorage from \"react-use/lib/useLocalStorage\";\nimport { Loading } from \"./components/Loading\";\nimport { Login } from \"./pages/Login\";\nimport { Logout } from \"./pages/Logout\";\nimport { Calm } from \"./pages/Calm\";\nexport function App() {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        notion = _useState2[0],\n        setNotion = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        user = _useState4[0],\n        setUser = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loading = _useState6[0],\n        setLoading = _useState6[1];\n\n  const _useLocalStorage = useLocalStorage(\"deviceId\"),\n        _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n        deviceId = _useLocalStorage2[0],\n        setDeviceId = _useLocalStorage2[1];\n\n  useEffect(() => {\n    if (user) {\n      navigate(\"/calm\");\n    }\n  }, [user]);\n  useEffect(() => {\n    if (deviceId) {\n      const notion = new Notion({\n        deviceId\n      });\n      setNotion(notion);\n    } else {\n      setLoading(false);\n    }\n  }, [deviceId]);\n  useEffect(() => {\n    if (!notion) {\n      return;\n    }\n\n    const subscription = notion.onAuthStateChanged().subscribe(user => {\n      if (user) {\n        setUser(user);\n      } else {\n        navigate(\"/\");\n      }\n\n      setLoading(false);\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [notion]);\n\n  function resetState() {\n    setNotion(null);\n    setUser(null);\n    setDeviceId(\"\");\n  }\n\n  if (loading) {\n    return React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Login, {\n    path: \"/\",\n    notion: notion,\n    user: user,\n    setUser: setUser,\n    setDeviceId: setDeviceId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Calm, {\n    path: \"/calm\",\n    notion: notion,\n    user: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Logout, {\n    path: \"/logout\",\n    notion: notion,\n    resetState: resetState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/sophiabatchelor/Code/Neurosity/brain-fetti/src/App.js"],"names":["React","useState","useEffect","Router","navigate","Notion","useLocalStorage","Loading","Login","Logout","Calm","App","notion","setNotion","user","setUser","loading","setLoading","deviceId","setDeviceId","subscription","onAuthStateChanged","subscribe","unsubscribe","resetState"],"mappings":"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","sourcesContent":["//this is exactly the same as notion-ocean \n// the edits you want go into Calm etc \n\nimport React, { useState, useEffect } from \"react\";\nimport { Router, navigate } from \"@reach/router\";\nimport { Notion } from \"@neurosity/notion\";\nimport useLocalStorage from \"react-use/lib/useLocalStorage\";\n\nimport { Loading } from \"./components/Loading\";\nimport { Login } from \"./pages/Login\";\nimport { Logout } from \"./pages/Logout\";\nimport { Calm } from \"./pages/Calm\";\n\nexport function App() {\n  const [notion, setNotion] = useState(null);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [deviceId, setDeviceId] = useLocalStorage(\"deviceId\");\n\n  useEffect(() => {\n    if (user) {\n      navigate(\"/calm\");\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (deviceId) {\n      const notion = new Notion({ deviceId });\n      setNotion(notion);\n    } else {\n      setLoading(false);\n    }\n  }, [deviceId]);\n\n  useEffect(() => {\n    if (!notion) {\n      return;\n    }\n\n    const subscription = notion.onAuthStateChanged().subscribe(user => {\n      if (user) {\n        setUser(user);\n      } else {\n        navigate(\"/\");\n      }\n      setLoading(false);\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [notion]);\n\n  function resetState() {\n    setNotion(null);\n    setUser(null);\n    setDeviceId(\"\");\n  }\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    <Router>\n      <Login\n        path=\"/\"\n        notion={notion}\n        user={user}\n        setUser={setUser}\n        setDeviceId={setDeviceId}\n      />\n      <Calm path=\"/calm\" notion={notion} user={user} />\n      <Logout path=\"/logout\" notion={notion} resetState={resetState} />\n    </Router>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}